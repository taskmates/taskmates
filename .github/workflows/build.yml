name: Build

on:
  push:
    branches: [ main, development ]
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.11.1]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached pip wheels
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --no-interaction
      - name: Run tests
        env:
          TASKMATES_TELEMETRY_ENABLED: false
        run: |
          source $VENV
          export TASKMATES_HOME=${{ runner.temp }}/.taskmates
          poetry run pytest -q --show-capture=no --disable-warnings --tb=auto
      - name: Build package
        run: |
          source $VENV
          poetry build
      - uses: actions/upload-artifact@v4
        with:
          name: package-${{ matrix.os }}
          path: dist/*
