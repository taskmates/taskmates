[tool.poetry]
name = "taskmates"
version = "0.1.0"
description = ""
authors = ["srizzo <rizzolabs@gmail.com>"]
readme = "README.md"
exclude = ["tests/", "examples/*", "data/", "pocs/", "notebooks/", "lib/lamma_/", "bin/", "lib/llama_/*"]



[tool.poetry.dependencies]
anthropic = "^0.26.1"
blinker = "^1.7.0"
decohints = "^1.0.9"
docstring-parser = "^0.16"
dpath = "^2.1.6"
funcy = "^2.0"
google-api-python-client = "^2.111.0"
hypercorn = "^0.16.0"
inflection = "^0.5.1"
ipython = "^8.18.1"
jinja2 = "^3.1.2"
jira = "^3.8.0"
jsonref = "^1.1.0"
jupytext = "^1.16.0"
loguru = "^0.7.2"
markdown = "^3.5.1"
markdown-tree-parser = "^0.1"
markupsafe = "^2.1.3"
nbclient = "^0.9.0"
nbconvert = "^7.16.4"
numpy = "^1.26.2"
openai = { extras = ["embeddings", "wandb"], version = "^1.20.2" }
pandas = "^2.1.4"
pillow = "^10.1.0"
pydantic = "^2.5.2"
pypdf = "^3.17.4"
pytest = "^8.2.0"
python = "^3.11"
pyyaml = "^6.0.1"
quart = "^0.19.6"
ruamel-yaml = "^0.18.5"
typeguard = "^4.1.5"
wrapt = "^1.16.0"

# experimental
opentelemetry-api = "^1.23.0"
opentelemetry-distro = "^0.44b0"
opentelemetry-exporter-otlp-proto-common = "^1.23.0"
opentelemetry-exporter-otlp-proto-grpc = "^1.23.0"
opentelemetry-instrumentation = "^0.44b0"
opentelemetry-instrumentation-asgi = "^0.44b0"
opentelemetry-instrumentation-fastapi = "^0.44b0"
opentelemetry-instrumentation-flask = "^0.44b0"
opentelemetry-instrumentation-logging = "^0.44b0"
opentelemetry-instrumentation-requests = "^0.44b0"
opentelemetry-instrumentation-wsgi = "^0.44b0"
opentelemetry-proto = "^1.23.0"
opentelemetry-sdk = "^1.23.0"
opentelemetry-semantic-conventions = "^0.44b0"
opentelemetry-util-http = "^0.44b0"
tiktoken = "^0.7.0"


# extras
chromadb = "^0.5.0"
jupyter-client = "^8.6.2"
pyarrow = "^16.1.0"
httpx = "^0.27.0"
nbformat = "^5.10.4"
requests = "^2.32.2"
websockets = "^12.0"

[tool.poetry.group.dev.dependencies]
pytest-socket = "^0.7.0"
icecream = "^2.1.3"
jupyter = "^1.0.0"
neo4j = "^5.15.0"
patch = "^1.16"

#accelerate = "^0.25.0"
#aspectlib = "^2.0.0"
#beautifulsoup4 = "^4.12.2"
#black = "^23.12.0"
#bokeh = "^3.3.2"
#bs4 = "^0.0.1"
#cssselect = "^1.2.0"
#ctranslate2 = "^4.1.0"
#lxml = "^4.9.4"
#pyquery = "^2.0.0"
#pandasql = "^0.7.3"
#dagster = "^1.5.13"
#dagster-webserver = "^1.5.13"
#dask = { extras = ["distributed"], version = "^2023.12.1" }
#dataset = "^1.6.2"
#datasets = "^2.15.0"
#deepdiff = "^6.7.1"
#dependency-injector = "^4.41.0"
#diff-match-patch = "^20230430"
#faiss-cpu = "^1.7.4"
#fastapi = "^0.105.0"
#faster-whisper = "^1.0.1"
#flask = "^3.0.0"
#google-cloud-speech = "^2.23.0"
#gradio = "^4.26.0"
#graphio = "^0.9.3"
#grpcio = "^1.60.0"
#grpcio-tools = "^1.60.0"
#inject = "^5.2.0"
#injector = "^0.21.0"
#lagom = "^2.6.0"
#langchain = "^0.0.352"
#mistletoe = "^1.2.1"
#optimum = "^1.16.1"
#pandera = "^0.18.0"
#potracer = "^0.0.4"
#promptlayer = "^0.4.0"
#protobuf = "^4.25.1"
#pyannote-audio = "^3.1.1"
#pyaudio = "^0.2.14"
#pydub = "^0.25.1"
#pygments = "^2.17.2"
#pyperclip = "^1.8.2"
#rdflib = "^7.0.0"
#requests = "^2.31.0"
#scipy = "^1.11.4"
#sentence-transformers = "^2.7.0"
#sounddevice = "^0.4.6"
#soundfile = "^0.12.1"
#speechrecognition = "^3.10.1"
#sqlparse = "^0.4.4"
#testcontainers = "^3.7.1"
#torch = "^2.1.2"
#torchaudio = "^2.2.2"
#transformers = "^4.36.2"
#unstructured = "^0.11.6"
#wandb = "^0.16.1"
#whisperx = { git = "https://github.com/m-bain/whisperx.git" }
pytest = "^8.2.0"
pytest-mock = "^3.14.0"
pytest-asyncio = "^0.23.7"
coverage = "^7.5.3"
matplotlib = "^3.9.0"
matplotlib-inline = "^0.1.7"

[tool.poetry.extras]
chromadb = ["chromadb"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry.scripts]
taskmates-tools = "taskmates.tools.function_registry:main"
taskmates-count-tokens = "lib.openaei_.count_tokens:main"
taskmates-extract-section = "taskmates.cli.extract_section:main"
taskmates-jupyter-enterprise-gateway = "taskmates.clients.jupyter_.jupyter_enterprise_gateway_client:main"
taskmates-code-ls = "lib.cli_ide.code_ls:main"
taskmates-code-ast = "lib.cli_ide.code_ast:main"
taskmates-google-search = "tools.google_.google_search:main"
taskmates-complete = "taskmates.cli.taskmates_complete:main"
taskmates = "taskmates.cli.taskmates_cli:main"
